from math import log2

load("ecdsa.sage")


if __name__ == "__main__":
    _, E, G, n = params()
    messages1 = [
        b"This is message number 0",
        b"This is message number 1",
        b"This is message number 2",
        b"This is message number 3",
        b"This is message number 4",
        b"This is message number 5",
        b"This is message number 6",
        b"This is message number 7",
        b"This is message number 8",
        b"This is message number 9",
        b"This is message number 10",
        b"This is message number 11",
        b"This is message number 12",
        b"This is message number 13",
        b"This is message number 14",
        b"This is message number 15",
        b"This is message number 16",
        b"This is message number 17",
        b"This is message number 18",
        b"This is message number 19",
    ]
    signatures1 = [
        (
            35008376021275610858308656820692656981452315132236852772418589050824915774344371711029219234073085600717628545115188,
            549066568075075476296274979244131338262710623710309066099940561002939395631713465588128385510860809081559818123807,
        ),
        (
            8294054352045786878901533843387724294088968900800466292000764679909542268740033592384512148001624305970805667117133,
            1114091170538334127309832034436488814369444263298867900405018711300182837788987371347981824737270777126088614423965,
        ),
        (
            3260271763573736116647982136853937326256376599858914143642223686003632424326705355924728941600344017887258353663593,
            11567800159432176283429191950567544287180787813088899428267112242920634963883948649810044755134416723693510143828645,
        ),
        (
            8011407232264909014100566316360803686506607172909344365226696080574699982165933572384322671464241548995274260894168,
            32646346461180795329261776586718649304752844046309614189695324993880431350298759786819026614457541601040753664926922,
        ),
        (
            30893748267508448168361636292244650063914420439739014296364387366730912403364056386505046821445878932975242942065322,
            36786965603631886812145141114560772999551524093780349736139946304171690107780778602186731096716690569911588361124520,
        ),
        (
            34934409481893809110696743163663979824884711706228333567410946042619485573182595764435965785809296607328955766433929,
            30148607046496468691182592053968159268985350538421253653235377751897173270912906926185931247997398943327735613498981,
        ),
        (
            22207919743740141271733250290410166761769871274176875333113768817984697619197535192548334128716457620621914321079481,
            36976591952457302502135696397019463803398842321299959218190191356289289014835969919880525958956454272260134229817733,
        ),
        (
            19007314512091756212448415585212579604266425178481851961194954910161381346011659505673320464177275339007458055077177,
            6151452155622716402204205944642555374437735560682494503428065775024431987973412967913512868349479895176159615527541,
        ),
        (
            25583233851837183172008484085976175390372919969101957838008892432722176571987759748712301057130578351062540324391754,
            5964211119091420871255498111289170835234826129500004329484377685788465840439750592761125849004907926597377900994021,
        ),
        (
            16932621149897721370800084116898927615663585745876876884938155094703907331093772480946610262229829491879684937459238,
            6332018002902360492309965017404887138722659381595491101909500246474594378993140214866580468334505403089860620598189,
        ),
        (
            28848589053204138859509605027378290972357691151505427261418618200518575025883016587495322947086369878774133008621370,
            19962777504941220284208440813103996602606564989223684234512905264813240683520517595698042516558301597477552179193056,
        ),
        (
            36572380407267514041485986876906002533978500747372319275860471180888372338126058184377629202245272307087583381689220,
            36563379332424571953492317232141909336495522602744292565414290344958132940601618242540308398658986385186000521371493,
        ),
        (
            29276580855206037256071138257380898747752490731680228838485387114111628890364155547058786957358015489766178803442997,
            17849345489955564766726482889798748770074007393325647287504909205868653349438866532029562523007531585605686025946208,
        ),
        (
            14250687510643183743516518926776333125209183384184380114227077881561590963735971374560716310933880030983528695266624,
            24122297539155486537736469071027025861776779446954266339947612470281502665122409609115971413130109745498332947853984,
        ),
        (
            6587621831447606457995362670043546058116009128302457653703638481783572409974125919479979592199371271154382631493019,
            28321267985761722096624165172662729114059598858068332143701891891924510237674411569714797166232428178901671423643860,
        ),
        (
            22128472782688542560967469152745882610449538189692892693911910996086063345781385427658598707953525184820627322608379,
            30587999732679153383168279757385657746346453894189638204775656917147225715749813739712729890794169317191063016824661,
        ),
        (
            23067754332207375572900857514410715160373655071820133805930133087680980394279450943535401578128895183205547361230177,
            12575580930304823242371644752336289936939336809654799348653571553934059467027941573836665385294486314630513815113573,
        ),
        (
            10986570259742007195804089585593398193863095880828581513834050491641350998195293991582202636383465954185965103349904,
            681443814463377759709533105294151973628648101834077533252077224153144551292048412262444796082803260835199959120758,
        ),
        (
            4236445535598015939317884515435277068507710814379771458704927836804436183236772142552488472026743110232933480481826,
            3389415415584082403364024105374039781497175503424025729691652437407144542034904444330407353647634864424157079825795,
        ),
        (
            17769805035711521106631432422195152438417614478791633473402201925815311946456982434598569017979539757531232992441177,
            33429334555275427085080833190871047606015296672982926292753888883241954074024193072326190180380676671465495939781493,
        ),
    ]
    A1 = (
        18012694871650400903275574844605256438953275112182499252968473063330984812642463746388132206509985998459011380061160,
        10860520275532668894559705822990487006344876832571899351362003600285726856686833891757289044676545303406773197991148,
    )

    # Establish relation between ECDSA and HNP
    B = n // 2 ^ 32
    m = len(messages1) if len(messages1) == len(signatures1) else None
    space = MatrixSpace(QQ, m + 2, m + 2)
    M = space.identity_matrix() * n
    for j, (message, (r, s)) in enumerate(zip(messages1, signatures1)):
        inv_s = inverse_mod(s, n)
        M[m, j] = r * inv_s  # This is t_i
        M[m + 1, j] = -(h(message) * inv_s)  # This is a_i
    M[m, m] = B / n
    M[m + 1, m + 1] = B
    reduced = M.LLL()

    # Test every row of `reduced`
    # and try to extract alpha
    key = None
    for row in reduced.rows():
        candidate = ((-1) * row * n / B)[-2] % n
        public = int(candidate) * G
        if public[0] == A1[0] and public[1] == A1[1]:
            print("Got it!")
            print("The private key is:", candidate)
            key = candidate
            break
    if not key:
        print("No match found.")
